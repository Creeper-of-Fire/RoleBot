#version: '3.8'

services:
  redis: # Redis 服务
    image: "redis:7-alpine" # 使用官方的、轻量的 Redis 镜像
    container_name: rolebot_redis # 容器名
    restart: unless-stopped
    volumes:
      - redis_data:/data # 将 Redis 数据持久化到命名卷
    command: redis-server --save 60 1 --loglevel warning --maxmemory 100mb --maxmemory-policy allkeys-lru # 每60秒至少有1个key变化时就保存

  rolebot:
    build: .
    container_name: rolebot
    restart: unless-stopped
    depends_on: # 确保 Redis 启动后，再启动机器人
      - redis
    volumes:
      - rolebot_data:/app/data
    environment:
      # --- Discord 配置 ---
      # 通过环境变量将敏感信息注入到容器中
      # 这些变量将覆盖 config_data.py 中 os.getenv 的默认值
      # 你需要在 docker-compose.yml 同级目录下创建一个 .env 文件来设置这些变量
      - DISCORD_BOT_TOKEN=${DISCORD_BOT_TOKEN} # 从 .env 文件读取 DISCORD_BOT_TOKEN
      - DISCORD_BOT_PROXY=${DISCORD_BOT_PROXY:-} # 从 .env 文件读取 DISCORD_BOT_PROXY，如果没有则为空字符串
      # --- Redis 配置 ---
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_DB=0
    logging: # 可选：限制日志输出大小
      options:
        max-size: "10m"
        max-file: "3"

volumes:
  rolebot_data: # 定义上面使用的命名卷，Docker 会自动创建和管理它
  redis_data: # 为 Redis 服务定义命名卷